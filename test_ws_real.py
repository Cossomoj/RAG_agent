import asyncio
import websockets
import json

async def test_ws():
    uri = "ws://localhost:8000/ws"
    try:
        async with websockets.connect(uri) as websocket:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket!")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç RAG —Å–µ—Ä–≤–∏—Å
            await websocket.send("–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?")
            await websocket.send("user")  
            await websocket.send("none")
            await websocket.send("888")
            
            print("üì§ –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –∂–¥–µ–º –æ—Ç–≤–µ—Ç...")
            
            # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
            while True:
                try:
                    response = await asyncio.wait_for(websocket.recv(), timeout=5.0)
                    if response:
                        print(f"üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response}")
                        break
                    else:
                        print("‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
                except asyncio.TimeoutError:
                    print("‚è∞ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞")
                    break
                except websockets.exceptions.ConnectionClosed:
                    print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
                    break
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(test_ws()) 